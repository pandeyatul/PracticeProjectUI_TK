// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PracticeProjectUI_TK.Data;

#nullable disable

namespace PracticeProjectUI_TK.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240302060510_address")]
    partial class address
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Entities_TK.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address_streetline1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address_streetline2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pincode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("Entities_TK.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("StateID")
                        .HasColumnType("int");

                    b.Property<string>("city_Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("StateID");

                    b.ToTable("cityTbl");
                });

            modelBuilder.Entity("Entities_TK.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Country_Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("countryTbl");
                });

            modelBuilder.Entity("Entities_TK.Skills", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SkillsTbl");
                });

            modelBuilder.Entity("Entities_TK.State", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("CountriesId")
                        .HasColumnType("int");

                    b.Property<int>("Country_ID")
                        .HasColumnType("int");

                    b.Property<string>("State_Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CountriesId");

                    b.ToTable("stateTbl");
                });

            modelBuilder.Entity("Entities_TK.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PermanentAddressId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PermanentAddressId");

                    b.ToTable("StudentTbl");
                });

            modelBuilder.Entity("Entities_TK.StudentSkill", b =>
                {
                    b.Property<int>("StudentsId")
                        .HasColumnType("int");

                    b.Property<int>("SkillId")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.HasKey("StudentsId", "SkillId");

                    b.HasIndex("SkillId");

                    b.ToTable("StudentSkill");
                });

            modelBuilder.Entity("Entities_TK.Users", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Passowrd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UsersTbl");
                });

            modelBuilder.Entity("Entities_TK.City", b =>
                {
                    b.HasOne("Entities_TK.State", "State")
                        .WithMany("City")
                        .HasForeignKey("StateID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("State");
                });

            modelBuilder.Entity("Entities_TK.State", b =>
                {
                    b.HasOne("Entities_TK.Country", "Countries")
                        .WithMany("Statelist")
                        .HasForeignKey("CountriesId");

                    b.Navigation("Countries");
                });

            modelBuilder.Entity("Entities_TK.Student", b =>
                {
                    b.HasOne("Entities_TK.Address", "PermanentAddress")
                        .WithMany()
                        .HasForeignKey("PermanentAddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PermanentAddress");
                });

            modelBuilder.Entity("Entities_TK.StudentSkill", b =>
                {
                    b.HasOne("Entities_TK.Skills", "Skill")
                        .WithMany("StudentSkills")
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities_TK.Student", "Students")
                        .WithMany("StudentSkills")
                        .HasForeignKey("StudentsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Skill");

                    b.Navigation("Students");
                });

            modelBuilder.Entity("Entities_TK.Country", b =>
                {
                    b.Navigation("Statelist");
                });

            modelBuilder.Entity("Entities_TK.Skills", b =>
                {
                    b.Navigation("StudentSkills");
                });

            modelBuilder.Entity("Entities_TK.State", b =>
                {
                    b.Navigation("City");
                });

            modelBuilder.Entity("Entities_TK.Student", b =>
                {
                    b.Navigation("StudentSkills");
                });
#pragma warning restore 612, 618
        }
    }
}
